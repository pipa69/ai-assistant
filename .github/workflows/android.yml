name: AI Assistant Android CI

on:
  push:
    branches: [ "main", "pipa69-patch-1-1" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    # WAŻNE: Sprawdzenie czy gradlew istnieje i nadanie uprawnień
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    # Sprawdzenie czy projekt kompiluje się
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
      
    # Uruchomienie testów jednostkowych
    - name: Run unit tests
      run: ./gradlew test --stacktrace
      
    # Android Lint - tylko jeśli masz app module
    - name: Run lint
      run: ./gradlew :app:lintDebug --stacktrace
      continue-on-error: true  # Lint nie zatrzyma buildu
      
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    # Budowanie debug APK z wszystkimi modułami Clean Architecture
    - name: Build debug APK
      run: ./gradlew :app:assembleDebug --stacktrace
      env:
        # Zwiększenie pamięci dla Gradle (potrzebne dla Compose + Hilt + Room)
        GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError"
      
    # Test kompilacji wszystkich wariantów
    - name: Compile all build variants
      run: ./gradlew assemble --stacktrace
      env:
        GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4096m -XX:MaxMetaspaceSize=1024m"
      
    # Upload APK jako artefakt
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: ai-assistant-debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    # Upload AAB jeśli został zbudowany
    - name: Upload debug AAB
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ai-assistant-debug-aab
        path: app/build/outputs/bundle/debug/*.aab
        retention-days: 30
        
    # Upload build reports w przypadku błędu
    - name: Upload build reports
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-reports
        path: |
          app/build/reports/
          build/reports/
        retention-days: 7

  # Job dla release build (tylko na main branch)
  release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test, build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    # Build release APK
    - name: Build release APK
      run: ./gradlew :app:assembleRelease --stacktrace
      env:
        GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -XX:+HeapDumpOnOutOfMemoryError"
        
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/*.apk
        retention-days: 90
